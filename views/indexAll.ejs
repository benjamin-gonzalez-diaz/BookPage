<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>tabla grande</title>
</head>

<body>
  <input type="text" id="myInput" onkeyup="myFunction(0)" placeholder="Search for names..">
  <table id="myTable2">
    <style>
      table {
        border-collapse: collapse;
        width: 100%;
      }
      th {
        cursor: pointer;
        }

      th, td {
        border: 1px solid black;
        padding: 8px;
        text-align: left;
      }
      th {
        background-color: #f2f2f2;
      }
    </style>
    <tr>
      <th onclick="sortTable(0)">Nombre del autor</th>
      <th onclick="sortTable(1)">libros</th>
      <th onclick="sortTable(2)">number of published books</th>
      <th onclick="sortTable(3)">average score</th>
      <th onclick="sortTable(4)">total sales</th>
    </tr>
    <% Authors.forEach(user => { %>
      <tr>
        <td><%= user.nombre %></td>
        <td>

            <% 
              const authorBooks = books.filter(book => book.author === user.id);
              let book_count = 0;
              authorBooks.forEach((book, index) => {
                book_count++;
            %>
              <li><%= (index + 1) + '. ' + book.nombre %></li>
            <% }); %>
          
        </td>
        <td><strong>Total: <%= book_count %> libros</strong></td>
        <td>  
          <% 
            const authorReviews = reviews.filter(review => authorBooks.some(book => book.id === review.book));
            if (authorReviews.length > 0) { 
              let totalScore = 0;
              authorReviews.forEach(review => { 
                totalScore += review.score;
              });
              const averageScore = (totalScore / authorReviews.length).toFixed(2);
              %>
              <%= averageScore %>
          <% } else { %>
              no hay Review actualmente
          <% } %>
        </td>
        <td>
          <% 
            const authorSales = books.filter(book => book.author === user.id);
            let totalSales = 0; // Variable para almacenar el total de ventas
        
            authorSales.forEach(book => {
              totalSales += book.numberofsales; // Sumar las ventas del libro al total
          %>
          <% }); %>
          <strong><%= totalSales %></strong>
        </td>
        
      </tr>
    <% }); %>
  </table>
</body>

</html>
<script>
  function sortTable(n) {
    // url: https://www.w3schools.com/howto/howto_js_sort_table.asp
    var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
    table = document.getElementById("myTable2");
    switching = true;
    // Set the sorting direction to ascending:
    dir = "asc";
    /* Make a loop that will continue until
    no switching has been done: */
    while (switching) {
      // Start by saying: no switching is done:
      switching = false;
      rows = table.rows;
      /* Loop through all table rows (except the
      first, which contains table headers): */
      for (i = 1; i < (rows.length - 1); i++) {
        // Start by saying there should be no switching:
        shouldSwitch = false;
        /* Get the two elements you want to compare,
        one from current row and one from the next: */
        x = rows[i].getElementsByTagName("TD")[n];
        y = rows[i + 1].getElementsByTagName("TD")[n];
        /* Check if the two rows should switch place,
        based on the direction, asc or desc: */
        if (dir == "asc") {
          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
            // If so, mark as a switch and break the loop:
            shouldSwitch = true;
            break;
          }
        } else if (dir == "desc") {
          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
            // If so, mark as a switch and break the loop:
            shouldSwitch = true;
            break;
          }
        }
      }
      if (shouldSwitch) {
        /* If a switch has been marked, make the switch
        and mark that a switch has been done: */
        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
        switching = true;
        // Each time a switch is done, increase this count by 1:
        switchcount ++;
      } else {
        /* If no switching has been done AND the direction is "asc",
        set the direction to "desc" and run the while loop again. */
        if (switchcount == 0 && dir == "asc") {
          dir = "desc";
          switching = true;
        }
      }
    }
  }
</script>

<script>
  function myFunction(n) {
    // Declare variables
    var input, filter, table, tr, td, i, txtValue;
    input = document.getElementById("myInput");
    filter = input.value.toUpperCase();
    table = document.getElementById("myTable2");
    tr = table.getElementsByTagName("tr");
  
    // Loop through all table rows, and hide those who don't match the search query
    for (i = n; i < tr.length; i++) {
      td = tr[i].getElementsByTagName("td")[n];
      if (td) {
        txtValue = td.textContent || td.innerText;
        if (txtValue.toUpperCase().indexOf(filter) > -1) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }
  }
  </script>